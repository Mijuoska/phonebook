{"version":3,"sources":["components/Persons.js","services/persons.js","components/PersonForm.js","components/Notification.js","components/Filter.js","App.js","index.js"],"names":["Persons","person","deletePerson","name","number","type","value","id","onClick","baseurl","axios","get","then","response","data","newPerson","post","Person","put","delete","PersonForm","persons","setAndRenderPersons","setMessageTypeAndContent","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","match","filter","length","window","confirm","personObject","personService","returnedPerson","copy","concat","console","log","catch","error","onChange","target","Notification","message","messageType","className","Filter","setShown","setFilter","entriesToShow","toLowerCase","search","filterNames","App","setPersons","shownPersons","setMessage","setMessageType","content","useEffect","initialNames","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab223c70.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({ person, deletePerson }) => {\r\n\r\n    return (\r\n        <p>{person.name} {person.number} <button type=\"button\" value={person.id} name={person.name} onClick={deletePerson}>Delete</button></p>\r\n\r\n\r\n    )\r\n    }\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseurl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseurl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\nconst request = axios.post(baseurl, newPerson)\r\nreturn request.then(response => response.data)\r\n} \r\n\r\nconst update = (Person, id) => {\r\n    const request = axios.put(`${baseurl}/${id}`, Person)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseurl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n \r\nexport default { getAll, create, update, remove }","import React, { useState } from \"react\"\r\nimport personService from '../services/persons'\r\n\r\nconst PersonForm = ({ persons, setAndRenderPersons, setMessageTypeAndContent }) => {\r\n\r\nconst [newName, setNewName] = useState('')\r\nconst [newNumber, setNewNumber] = useState('')\r\n\r\n      const addPerson = (event) => {\r\n        \r\n          event.preventDefault()\r\n          const match = persons.filter(person => person.name === newName)\r\n          \r\n          if (match.length > 0) {\r\n             const result = window.confirm(`${newName} already exists in the phonebook. Add a new number?`)\r\n             if (result) {\r\n             const personObject = {...match[0], number: newNumber}\r\n             personService.update(personObject, personObject.id).then(returnedPerson => {\r\n               const copy = persons.filter(person => person.id !== personObject.id)        \r\n               setAndRenderPersons(copy.concat(returnedPerson))     \r\n               setMessageTypeAndContent('info', `Edited ${returnedPerson.name}`)\r\n              console.log(`Edited ${returnedPerson.name}`)\r\n             }).catch(error => {\r\n               console.log(error.response.data.error)\r\n               setMessageTypeAndContent('error', error.response.data.error)\r\n        \r\n             })\r\n          }\r\n            } else {\r\n              const personObject = {\r\n                  name: newName,\r\n                  number: newNumber\r\n              }          \r\n              \r\n              personService.create(personObject).then(returnedPerson => {\r\n                setAndRenderPersons(persons.concat(returnedPerson))\r\n                setMessageTypeAndContent('info', `Added ${returnedPerson.name}`)\r\n              }).catch(error => {\r\n                setMessageTypeAndContent('error', `Something went wrong while adding the person ${personObject.name}: ${error.response.data.error}`)\r\n                console.log(error.response.data.error)\r\n              });\r\n             \r\n          }\r\n          \r\n          setNewName('')\r\n          setNewNumber('')\r\n          \r\n      }\r\n\r\n       const handleNameInputChange = (event) => {\r\n           setNewName(event.target.value)\r\n       }\r\n\r\n       const handleNumberInputChange = (event) => {\r\n               setNewNumber(event.target.value)\r\n       }\r\n    return (\r\n        <div>\r\n        <h2>Add a new person</h2>\r\n<form onSubmit={addPerson}>\r\n        <div>\r\n          Name: <input value={newName} onChange={handleNameInputChange} />\r\n           </div>\r\n           <div>\r\n          Number: <input value={newNumber} onChange={handleNumberInputChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      </div>\r\n) \r\n      }\r\n\r\n    export default PersonForm","import React from 'react'\r\n\r\n\r\nconst Notification = ({ message, messageType }) => {\r\n  if (!message) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={messageType}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState } from \"react\"\r\n\r\n\r\nconst Filter = ({ persons, setShown }) => {\r\n  const [filter, setFilter] = useState('')\r\n\r\n\r\n  const filterNames = (event) => {\r\n      const entriesToShow = event.target.value ? persons.filter(person => person.name.toLowerCase().search(event.target.value.toLowerCase()) >= 0) : persons\r\n      setShown(entriesToShow)\r\n  }\r\n\r\n\r\n  const handleFilterInputChange = (event) => {\r\n      filterNames(event)\r\n      setFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n<div>\r\nFilter names: <input value={filter} onChange={handleFilterInputChange} />\r\n</div>\r\n\r\n  )\r\n\r\n  }\r\n\r\n  export default Filter","import React, { useState, useEffect } from 'react'\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport Notification from './components/Notification'\r\nimport Filter from './components/Filter'\r\nimport personService from './services/persons'\r\n\r\n\r\nconst App = () => {\r\n\r\nconst [persons, setPersons] = useState([])\r\nconst [shownPersons, setShown] = useState([])\r\nconst [message, setMessage] = useState()\r\nconst [messageType, setMessageType] = useState()\r\n\r\nconst setAndRenderPersons = (persons) => {\r\n  setPersons(persons)\r\n  setShown(persons)\r\n}\r\n\r\nconst setMessageTypeAndContent = (type, content) => {\r\n    setMessageType(type)\r\n    setMessage(content)\r\n}\r\n\r\nuseEffect(() => { personService.getAll().then(initialNames => {\r\n   setAndRenderPersons(initialNames)\r\n   \r\n }) \r\n }, [])\r\n\r\n const deletePerson = (event) => {\r\n   const result = window.confirm(`Delete ${event.target.name}?`)\r\n   if (result) {\r\n     personService.remove(event.target.value)\r\n     const copy = persons.filter(person => person.id !== event.target.value)  \r\n     setAndRenderPersons(copy)\r\n     setMessageTypeAndContent('info', `Removed ${event.target.name}`)\r\n   };\r\n }\r\n\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification message={message} messageType={messageType} />\r\n      <Filter persons={persons} setShown={setShown} />\r\n      <PersonForm persons={persons} setAndRenderPersons={setAndRenderPersons} setMessageTypeAndContent={setMessageTypeAndContent}/> \r\n      <h2>Numbers</h2>\r\n      {shownPersons.map(person => <Persons person={person} key={person.id} deletePerson={deletePerson}/>)}\r\n  </div>\r\n      )\r\n  }\r\n\r\n\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}